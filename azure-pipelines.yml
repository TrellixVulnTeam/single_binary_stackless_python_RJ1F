
trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'
pr:
  branches:
    include:
    - '*'
jobs:
- job: windows
  displayName: Windows
  pool:
    vmImage: 'vs2015-win2012r2'
  strategy:
    matrix:
      x86:
        target_type: x86
        vc_version: 2015
      x64:
        target_type: x64
        vc_version: 2015
      x64_pe:
        target_type: x64_pe
        vc_version: 2015
  steps:
  - script: git config --global core.autoCRLF false
    displayName: "Disable git autoCRLF"
  - checkout: self
    displayName: "Checkout"
    fetchDepth: 50
  - script: cmd /c PCbuild\my_build.bat $(target_type) $(vc_version)
    displayName: Build
  # - script: cmd /c PCbuild\my_test.bat $(target_type) $(vc_version)
  #   displayName: Test
  - task: CopyFiles@2
    inputs:
      contents: PCbuild\python*.exe
      targetFolder: $(Build.ArtifactStagingDirectory)
      flattenFolders: true
      cleanTargetFolder: true
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)
      artifactName: python_exe
      publishLocation: Container
  - task: CopyFiles@2
    inputs:
      contents: Lib.7z
      targetFolder: $(Build.ArtifactStagingDirectory)
      flattenFolders: true
      cleanTargetFolder: true
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)
      artifactName: lib_7z
      publishLocation: Container
- job: github_release
  displayName: GitHub Release
  dependsOn: windows
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/))
  steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      buildType: 'current'
      artifactName: 'python_exe'
      targetPath: 'artifact'
  - task: DownloadPipelineArtifact@2
    inputs:
      buildType: 'current'
      artifactName: 'lib_7z'
      targetPath: 'artifact'
  - task: GitHubRelease@0
    inputs:
      gitHubConnection: 'masamitsu-murase'
      repositoryName: '$(Build.Repository.Name)'
      action: 'edit'
      target: '$(Build.SourceVersion)'
      tagSource: 'auto'
      tag: '$(Build.SourceBranchName)'
      assets: 'artifact/**/*'
      assetUploadMode: 'replace'
      title: 'SampleTitle'
      releaseNotesSource: 'input'
      releaseNotes: 'Sample'
      isDraft: true
      isPreRelease: true
      addChangeLog: false
