
ProjectDir = ..
externalsDir = $(ProjectDir)\externals

!include common_arch.mak

INCLUDES = /I "$(ProjectDir)\Modules\_ctypes\libffi_msvc" /I "$(ProjectDir)\Include" /I "$(ProjectDir)\PC" /I "$(ProjectDir)\Stackless"
DEFINES = /D "Py_BUILD_CORE" /D "Py_ENABLE_SHARED" /D "WIN32" /D "NDEBUG"
CFLAGS = /O2 /Ob1 /Oi /GL $(INCLUDES) $(DEFINES) $(ARCH_DEFINES) /GF /FD /MT /Gy /W3 /nologo /Zi
LFLAGS = /NOLOGO /LTCG
TARGET = _ctypes.lib


!IF "$(BUILD_TARGET_CPU)" == "x86"
OBJS = $(ProjectDir)\Modules\_ctypes\_ctypes.obj \
          $(ProjectDir)\Modules\_ctypes\callbacks.obj \
          $(ProjectDir)\Modules\_ctypes\callproc.obj \
          $(ProjectDir)\Modules\_ctypes\cfield.obj \
          $(ProjectDir)\Modules\_ctypes\libffi_msvc\ffi.obj \
          $(ProjectDir)\Modules\_ctypes\malloc_closure.obj \
          $(ProjectDir)\Modules\_ctypes\libffi_msvc\prep_cif.obj \
          $(ProjectDir)\Modules\_ctypes\stgdict.obj \
          $(ProjectDir)\Modules\_ctypes\libffi_msvc\win32.obj
!ELSE
OBJS = $(ProjectDir)\Modules\_ctypes\_ctypes.obj \
          $(ProjectDir)\Modules\_ctypes\callbacks.obj \
          $(ProjectDir)\Modules\_ctypes\callproc.obj \
          $(ProjectDir)\Modules\_ctypes\cfield.obj \
          $(ProjectDir)\Modules\_ctypes\libffi_msvc\ffi.obj \
          $(ProjectDir)\Modules\_ctypes\malloc_closure.obj \
          $(ProjectDir)\Modules\_ctypes\libffi_msvc\prep_cif.obj \
          $(ProjectDir)\Modules\_ctypes\stgdict.obj \
          $(ProjectDir)\Modules\_ctypes\libffi_msvc\win64.obj
!ENDIF

!include common.mak
